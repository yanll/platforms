<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanll.auth.service.dao.RoleBeanMapper">
  <!---->
  <resultMap id="BaseResultMap" type="com.yanll.auth.service.domain.RoleBean">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="system_code" jdbcType="VARCHAR" property="systemCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="editable" jdbcType="INTEGER" property="editable" />
  </resultMap>
  <sql id="Base_Column_List">
    id, system_code, role_name, enabled, editable
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from m_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from m_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yanll.auth.service.domain.RoleBean">
    insert into m_role (id, system_code, role_name, 
      enabled, editable)
    values (#{id,jdbcType=BIGINT}, #{systemCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=INTEGER}, #{editable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yanll.auth.service.domain.RoleBean">
    insert into m_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="systemCode != null">
        system_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="editable != null">
        editable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="systemCode != null">
        #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="editable != null">
        #{editable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yanll.auth.service.domain.RoleBean">
    update m_role
    <set>
      <if test="systemCode != null">
        system_code = #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="editable != null">
        editable = #{editable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yanll.auth.service.domain.RoleBean">
    update m_role
    set system_code = #{systemCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      editable = #{editable,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteByPrimaryKeys">
    delete from m_role where id IN <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
  </delete>
</mapper>